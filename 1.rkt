#lang racket
; https://projecteuler.net/problem=2
; Each new term in the Fibonacci sequence is generated by adding the previous two terms.
; By starting with 1 and 2, the first 10 terms will be:
; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
; By considering the terms in the Fibonacci sequence whose values do not exceed four million,
; find the sum of the even-valued terms.
(define (fib-even-sum-until x)
	; recursive prodcedure starts linear iterative process from the first term of even sequences:
	; fib-even(n) = 2, 8, 34, 144,..., 4*fib-even(n-1) + fib-even(n-2)
	(define (fib-iter a b sum)
		; condition if the next term in the sequence will be greater than 'x'
		; if so, then the current term plus the current sum from previous terms
		; is the value that will not exceed 'x'
		(if (> (+ (* 4 a) b) x)
			(+ sum a)
			(fib-iter (+ (* 4 a) b) a (+ sum a))))
	(fib-iter 2 0 0))
